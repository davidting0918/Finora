name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password123
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 27017:27017

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest-cov

    - name: Set environment variables
      run: |
        echo "MONGODB_URL=mongodb://admin:password123@localhost:27017/finora_test?authSource=admin" >> $GITHUB_ENV
        echo "SECRET_KEY=test_secret_key_for_ci" >> $GITHUB_ENV
        echo "ALGORITHM=HS256" >> $GITHUB_ENV
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV

    - name: Wait for MongoDB to start
      run: |
        timeout 60 bash -c 'until mongosh "mongodb://admin:password123@localhost:27017/admin" --eval "db.runCommand(\"ping\").ok"; do sleep 2; done'

    - name: Run tests
      run: |
        cd backend
        python -m pytest tests/ -v --tb=short --cov=. --cov-report=xml --cov-report=term-missing

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        
    - name: Code style check
      run: |
        # Check code style
        flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
        # Check code formatting
        black --check backend
        # Check import sorting
        isort --check-only backend
        # Type checking
        mypy backend --ignore-missing-imports
